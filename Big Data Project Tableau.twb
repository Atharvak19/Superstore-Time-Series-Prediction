<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Superstore)' inline='true' name='federated.1wif3571e7dsxi16xathf1c7ogs1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore' name='excel-direct.0w12gkx02ac8y11fbujyn06vfqfl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/big data and data management/project/Sample - Superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Region]' />
                <expression op='[People].[Region]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0w12gkx02ac8y11fbujyn06vfqfl' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.0w12gkx02ac8y11fbujyn06vfqfl' name='People' table='[People$]' type='table'>
              <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0w12gkx02ac8y11fbujyn06vfqfl' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' hidden='true' name='[Order ID (Returns)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Order ID]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' hidden='true' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' hidden='true' name='[Product ID]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.718509' measure-ordering='alphabetic' measure-percentage='0.281491' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1wif3571e7dsxi16xathf1c7ogs1'>
      <datasources>
        <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
      </datasources>
      <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]'>
        <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]'>
        <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Home Office&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]'>
        <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='City Profit Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Max' name='[max:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[max:Profit:qk]' included-values='in-range'>
            <min>-1306.5504000000001</min>
            <max>-299.0</max>
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[max:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Longitude (generated)]' field-type='quantitative' max='-2155775.383358879' min='-15212721.046863955' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Latitude (generated)]' field-type='quantitative' max='9930234.5801755581' min='1763014.367732831' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[max:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.01' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:City:nk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Country:nk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:City:nk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[max:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[Latitude (generated)]</rows>
        <cols>[federated.1wif3571e7dsxi16xathf1c7ogs1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C46D4D60-FC54-4952-AB4B-9A810A9A68CD}' />
    </worksheet>
    <worksheet name='Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>PROFIT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Profit:qk]</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok] / [federated.1wif3571e7dsxi16xathf1c7ogs1].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{B495AB5C-A9C0-4D5C-85A0-043BBEE9E376}' />
    </worksheet>
    <worksheet name='Profit Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='Max' name='[max:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[max:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk] / [federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk])</rows>
        <cols>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{B6E3A113-0F30-4913-9C1C-067DB1774022}' />
    </worksheet>
    <worksheet name='Regionwise Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='None' name='[none:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Longitude (generated)]' field-type='quantitative' max='-7647774.67071974' min='-15033570.725676009' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Latitude (generated)]' field-type='quantitative' max='6651770.8691416113' min='2031898.4748174089' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' value='#000000' />
            <format attr='font-size' data-class='subtotal' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' value='12' />
            <format attr='font-weight' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' />
              <size column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sales:qk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Country:nk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[Latitude (generated)]</rows>
        <cols>[federated.1wif3571e7dsxi16xathf1c7ogs1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DD11D88F-8569-4953-AB2E-9FFD19527091}' />
    </worksheet>
    <worksheet name='SALES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok] / [federated.1wif3571e7dsxi16xathf1c7ogs1].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{BEBB76BC-21A1-48C8-B564-24E4F4838B03}' />
    </worksheet>
    <worksheet name='SUMMARY'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='total' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='9' />
            <format attr='font-size' data-class='subtotal' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='10' />
            <format attr='font-weight' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='bold' />
            <format attr='text-decoration' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='none' />
            <format attr='font-family' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='5' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dashed' />
            <format attr='stroke-color' scope='rows' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</rows>
        <cols>[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D9361A62-5C8E-4C96-BA66-206311B72E42}' />
    </worksheet>
    <worksheet name='Sales Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk] / [federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk])</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok] * [federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{0D5B9E25-07D0-472B-BE12-58A5B71F7BDF}' />
    </worksheet>
    <worksheet name='Shippment mode trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Ship Mode:nk]</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk] * [federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{54DF5C05-1AC8-429B-AB52-80CFCCF1C3B9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Executive Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1400' minheight='900' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
      </datasources>
      <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='18' param='vert' type='layout-flow' w='98858' x='571' y='889'>
            <zone h='5889' id='19' type='title' w='98858' x='571' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92333' id='16' param='vert' type='layout-flow' w='98858' x='571' y='6778'>
              <zone h='92333' id='7' param='horz' type='layout-flow' w='98858' x='571' y='6778'>
                <zone h='92333' id='5' type='layout-basic' w='87429' x='571' y='6778'>
                  <zone h='37415' id='12' name='SALES' w='87429' x='571' y='20333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41363' id='13' name='Profit' w='87429' x='571' y='57748'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13555' id='14' name='SUMMARY' w='87429' x='571' y='6778'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='92333' id='6' is-fixed='true' param='vert' type='layout-flow' w='11429' x='88000' y='6778'>
                  <zone h='6778' id='8' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]' type='filter' values='relevant' w='11429' x='88000' y='6778'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6778' id='9' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' values='relevant' w='11429' x='88000' y='13556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6778' id='10' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]' type='filter' values='relevant' w='11429' x='88000' y='20334'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9889' id='11' mode='slider' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='filter' values='relevant' w='11429' x='88000' y='27112'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>Executive Sales</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='24' param='vert' type='layout-flow' w='98858' x='571' y='889'>
                <zone h='5889' id='19' type='title' w='98858' x='571' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='114' h='13555' id='14' is-fixed='true' name='SUMMARY' w='87429' x='571' y='6778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37415' id='12' is-fixed='true' name='SALES' w='87429' x='571' y='20333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='8' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]' type='filter' values='relevant' w='11429' x='88000' y='6778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='9' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' values='relevant' w='11429' x='88000' y='13556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='10' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]' type='filter' values='relevant' w='11429' x='88000' y='20334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9889' id='11' mode='slider' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='filter' values='relevant' w='11429' x='88000' y='27112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41363' id='13' is-fixed='true' name='Profit' w='87429' x='571' y='57748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6DA4E0BC-1484-4F15-8905-AC42451B6639}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='SUMMARY'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]' type='filter' values='relevant' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EE0881C-9DC1-4681-83FC-377E6FC90A48}' />
    </window>
    <window class='worksheet' name='Regionwise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sales:qk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E60CAE38-DCB1-4415-B805-DD3E745A0862}' />
    </window>
    <window class='worksheet' maximized='true' name='Profit Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[max:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[max:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Product Name:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17031C80-F5EB-465E-95E4-94E318FFE027}' />
    </window>
    <window class='worksheet' name='Sales Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Product Name:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DDDBDEA-5C41-4D55-9802-134E8B35F01A}' />
    </window>
    <window class='worksheet' name='Shippment mode trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Ship Mode:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0004A6FE-117C-4273-815B-524B93D4FB89}' />
    </window>
    <window class='worksheet' name='City Profit Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[max:Profit:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:City:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{323AB53D-E6FB-45C5-849F-742AC951838E}' />
    </window>
    <window class='worksheet' name='SALES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{951D2B0D-1B11-42D2-9C9F-4330ECEF8782}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F21FA58-62A7-4DD3-A26B-B1B3BE31AA3F}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SALES'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SUMMARY'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5CD18EE3-F836-4EB2-B940-7B8F7F7AD82D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='City Profit Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit' width='192'>
      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
      IzQ0WPPQ5v8DcAhWL3V8u2UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Performance' width='192'>
      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
      wpr2/wGxPDfhLq48DQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Regionwise Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SALES' width='192'>
      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
      pY3Z+gd8qwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='SUMMARY' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Performance' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29V3Acabbf+UtT3qGAAgreGxoABAnQgBYkm93TPdMzPXM1915J90EvCsWG
      IlZShCIUin2Zl9XrPmzs1Wr3buxurEIhqWfubTPtyCbZ9ARJkKABSXjvTXlfmbkPILvZTXYT
      xSaAAit/T0BWZn4nzT8/d75zBE3TNHR0chRxsw3Q0dlMdAHo5DS6AHRyGl0AOjmNLgCdnEYX
      gE5OowtAJ6fRBaCT0+gC0MlpdAHo5DS6AHRyGl0AOjmNLgCdnEYXgE5Oowsgi1FVlWAwuNlm
      vNHoAshiNE0jFAptthlvNLoAdHIaebMN0NFZK0oiRO+Na4zNBTHnFdOxvwOv04SSjDHef4eB
      FRcnjzVjyOCceg2gszXQ0oze/Aafcye/+d3v2F9r5Wr3fdKqysTgQ5YjcUKBKGqGp9UFoLMl
      0JJR7i8ZObqrDFkS8dTupCw1w3RMomZnB3tbGzDLmb/OugB0tgSqoqCaZIxPNwhGLJYUycTP
      O68uAJ0tgWg04UqEWUisBjHRkgHmQ3bc9p93Xr0TrLMlEGQz7S2lnDt7mV1NZSyO3EMp3km+
      QWV5bpqQfxa/f4WJiSlKioqxm9f2aus1gM4WQSSvtoOuXSUEVlZQZDMmUUNVNcL+JRZDItsa
      PPiXlomnlDWfVdADY2UviqIwNzdHWVnZZpuSdWjpKIP945Q0bsNhEF75PM8JIBgMEovFfraB
      Oj8fVVUJhUK4XK7NNuWN5bmGktVqxWw2b4YtOj9AURRSqRRut3uzTfkeyWQSWZYRxexqQScS
      CUwmU0bHPCcAWdb7xdmCoiicvzPOg5n+5377D//8BAZZ2gSrVslGAaiqitFofPmOz/DSt90/
      2sOn14YwG0SM7nJOHtmH3ZTpjdeY6b+H6t1GuVMmkkhjs2Sm1PVBIzA/Rk/PPXxJmZ17D9FU
      lsdLW5SaRjwex2AyI4lraX8m6LvZR9XuPdgz/L4sB2MMTK48t13Ve26vhZc+jngsTNWekxzd
      5gFWPRRVTUMUBNA0VPjuhdE0NEFY/V/T0DQNBBFRhJLGFkBADc3y2bVR/uKtAwiiiIAGrB6j
      aiCIq+d9WpYgCMBqb18QRARBQHj1Ps/30CLznL/ykPbjpyixCQQi6dVr0jQ0DURx1S6N1f+f
      bkNT6D53jqaukxRZTN/Z88z1a6qKJgiIgoAgpFmcnadk1+uxW+f1kXF7J7k0zOnHYd4/0gZz
      PfxprJD3a+NcHvShrcyQ19SJZeEOgytpSMWIy6V88MFhBk+fxnrgIIk7Nxh6MMlHkQW27TtJ
      YOgKVa1dlDnTnP7sOod/c4r+7rMkYirLCQuHjrbRf/kb5sIJVEM+R08codCWibvTjzM79AjP
      zr1UuK0AFBghujjKpRv3iUQTGArr+cWxXVz57L8S0uwkIhGMFa0cLk3Q+/AhE+EoFbVttFWb
      uP9ohODCAsV7TuKJPuLW4zk0VEq3H6Zzh96JzVZeLoBUnNvXP2f+vgVbUQ0HG/NeuNvKkp+u
      t35Foc1In2+Q3QfbqCwwcff0NcLPFLezYz8Pk17+4u1OAK4OvaBI3wJCzXHebSwmOtHNSNhK
      fVkRy5PjDE4tUthU+mpX+wMiYRVn4ffbjI8fPkCyuikrkJgZ6mU8sAvZUcih9mPkyUFOX58g
      v3oXe3bO03j8JF6LkdDiMDMzYX7xwW9xmmSi/jrqkyYi4TCTYwMc2LH3tdir8/p5uQAMZvYc
      e+/bJlBi8QVvLFBc20SR/cnLJEiYjAZEUVhtMmRqVF4x1eUeZFEgGQljzvdSXOykuLgUV6En
      4/P9GPkeM7dn/agleTw1MxxNkl9VTIHNSEl5FYU2WJBkjAYJ8UmT5gUWU9lYj8tsAGLcu3EX
      a3UjxXY704Fx9JmW7CXjbrxkMKFGA8zMTnP7fj/qE/9TYa0Nc9mIJeZjdHaeUCyFRRKYn59j
      bGiAiXn/M+daPZ+9tIb04hSSyQzxOLFUKlOTfxR3dTPCzF16B8aYnZ5gdHqJ6pIC5pfDGE1G
      UuEgiRf61wrYjSkmJudZ8YfReFYYSeIJCbvdQjK0RCj+2szVWQekP/zhD3/4qR1EyYjV7sJh
      Wa0sRJMNJxGGJhbwVjdR7C0k32nFZLHhsK6O7MgGAza7A6MsYjCasLkcWEwmHHl5mE1WipwS
      w0NjmNxeakoLmJsYIyY6aWqsxVPgwmQw4nA4kSUByZxHWZ7IwNAoCaODiuJCDNLrGX4TZDMV
      FV6Wp0aZXY5SWFpGWXUNhsg8o5PzGPJKKPM4MBlX7ZFEEaPJjMtpo9DrYW5kiAg2vIUuLGYr
      dpsZMJPn0BgdncLoqaapyoPblYfRbMGV5yITj11N0+i+P8r40vMTk78/vhP5Nd2HTFEUBVEU
      1/7R2yDS6XTGw/i6K0QWoygKZ67eYyn2/LDzX59s3jQBZOtEWDwez3gSV5/1ynJaaot0X6B1
      JLskrKOzweg1QJZz8e44A2dePPL2InZUefj98Z3raNGbRW4LIDTLp2evPfEfl6hqPcDeptKX
      ukJomko6rSEbpJe7TfxMZpfD3B543hXixzAbc/uRZkpu362EH1P1Pt5vK8/oMCU1yenPF3nn
      g44cv4FbH/35/YBUcIazF64TiqcwOqo49fZ+pm+f487IEpLZTcf+Pczcu0TfYz/hDxfofLuL
      Spd1s83WeUVyXgAjt8/z4aAZBJmmjqM0l+WxbftOwrE4kw8fMBvex4IvRGPrfqpLC7FazZQd
      O8JKRK8B3gRy/vnV7jnO2880geYe32B4CUoKHBgMCWIJgbaO/YxNztJzbYCSnR00Fm2iwTqv
      lZwfBk0l44TDYcLhMPFkmoA/TEFJJV63lVgkDhosLvsorqynrjQPvz+AIJhIJJYJBsIklUxj
      kelkE7ktAGsh9tAIFy9e5OLFKwxMrVDftpvE5APuj66wc/9RvDZwmSV6b1xlImZlV2MVolzE
      vl353Lx+m5VYcrOvQudnoLtCZDGKovDZhTvMZBAhvbbUzdt769bPKHRXCJ0NpL2phF/rrhDr
      RnZJWEdng9EFoJPT5HgTSGH0Xjd3h+ewuMvpPNiB05j5N0FJhBmbD1BXqTdVtho5XQPM3b9C
      f8zDe796n45GD35/dI1Hagxf+oL7C6sLVbRkjInZhfUzVGfdyO0aQBRQEhGiKY2C0loKgERg
      hgsXruNPKOSVNHL0YCsPLn1DRcchvLYU3Z/1UNtZzrme+6RH/ExV1NG5p4bwwihnPptgOZig
      +ejbNJe9OHiATnaR0wIoamyn7v5tzn3+Cbaiajr37Wb03gMq249zstjGYPfXPJyuIxmPo2ga
      oJGIxhHyazje3ky08TitXgvp0CIGaz6dhw5j8j3k3FxIF8AWIacFIMgWmnYfprE1wej9y1zv
      ncSQSNPitCJJRgqL8ugLxtZ0k0x212pMeoPxtQXu0ll/croPsDg5wNjMCioiIiqCJFLlMvFw
      dI5ELMDDx3OUlLowoBBLpPDPTjG1spq42mAAvz+CoqQzTsymkz3kdA3gLihkpLubO91xPNXN
      HO+oRKaExI1LfP5VlKb2LhrcBhL72vjm0teMFpTQvGcnFgQK9hxm6psLnJ0vp7OjgcqSJx5y
      lnyqizIL0KqzeeiuEFlMtibIeJNcIbLrCnR0NhhdADo5TU73AbYCPQOz/Lln9pWOPdhcQUut
      9zVb9GaR0wKYGR/BVlSBy2IgujDM/SUD+7ZXImgxRgcXKW2qZLPTeAxNrXDh0dqjQjxLaYFD
      F8BLyOkmUGJ+nNGlMKAw/egxD8cmUdFIB2bpm/ezliwEieUxvrp2f71N1VkncroGKCkvYGDa
      j1osMiN42GONMJ/UMCz5KfAUoqWiPOi5Tv/UMo7iBg7uayY82svle6MIRjudxw8yfvkqvaM+
      QjND7D72HnWeza4zdDIhpwVgLipD7n2ML2hCdjhocKa4PRUj3x+isLyeyPwAk/F8Dh5qYrj3
      NsPzXtIjczQdPEGNU0IwONhzaD9L+UHeP7J7sy9H5xXI6SYQshu3PcjkzDx2awHWyjpSEyME
      IzGcTjuhhWkWfIsMDY2g2QvIt7loaN9JcLiPyxevMKsH/9/y5LYAEHG58pgaGsLh9YChBLN6
      j8VoIS6riMNbjkm2cuDQYdoaa7Ga00TiJnYfPMzR1kL6R5cRRYlkOExSVVH11I1bjhwXAHhL
      S7C7qyh2rcbg9+aXUtJQhVEAR8kOOmskPvn7P3F1YAaDZEZWfJz79B/4+lGaQ60lyHll7C4R
      +PTjPzPhf33Za3Q2Bt0VIotRFIX/9lU3A/OvFnrlF/vrObAjs7ina+FNcoV4TgDJZJJ0Ov1a
      DdN5NVRVZXl5mcLCws025Xuk02kkScq6FEnJZPLnZ4pPJpPE43rnLhtQVZVUKkU0utalmhtD
      tgoglUpl/PHWm0BZjKIoTN/8BK8y+cLfxfxaDNt/tcFWvVlNoJfPA2gqgYUJHgxMIDuKaN7R
      gM0ooalpJvrvMhYysq9tO8mVCfqG56ht2Ut0YYSy6gZMmaRE3CRSMT/9Dx/jS4jUbW+hxG1Z
      h6QXKabHZvFUVGJ6Pt/dT6JM95Cc+OiFv0m1xzdFAG8SL31DA3P9nLnaT2V9I/nCIucv9hBL
      QzI8wf2RJE21FRi0ADd7xiitq8dlkSjyliC/QoLsjUZLBrl49iJJm5e6ymIS0cgaD1S4eeEC
      y/G1jvokGbzXR0R5ZVN11omX1AAKU/39NB34BRUlZij24D//JWNTs8zc+oqHUzJRMU2NYYbe
      wRX8yTAdR99hceA2zR1dKCvjXO++gz8pc+DEOzjjk9y4dY+QaqZ17yHqih0bc5U/gm/sAWpJ
      K21N1d9mik/HfPRc72ZqJU759nY6tpfT13OJcCTB7GKI8ub9NBhnudLdzcOZOSrqdrO30cX4
      9AqxhVHEyv1UCJNc7x0iJVlo3XeU+uLsrwlzlZcIIIHfZ6LO86RdJcjk5TmIakYOHjlEYsDK
      u0fqEeLz+EwLvH2kBYCB5UUUNcbDnkdU7T/FCadARFF4eHOQ2vYjOJKLfHPnLnXvHl7ny/tp
      lhdjeGvyeLayGn50H0t5MydaJO5cvc5sVRm+pSXKdp1gb3uML7sn2X+infbmRRqPn8RrMRJa
      HOHB7bvsOX6K+rJ8wispDnZVo0WXuNF3n7riXZt3kTo/yUsEYMBijRGJauBafUvi8TgGwxr8
      JFNBVpQ8Wj02RMDBEuP90yykNQxAXn7lzzb+52Kzi8yHvj/GPjs1hp8QM0YJyZ6PGTDY3RTn
      OzAICib5RdcuUbl9F43lBUCa8b7bjIZFZDXJfNyIPsyQvbykbpapqCvjzrWbJBSV4NwjhhdF
      yorW0HQx5uGRVxidC6GkIgQjVgrLrDTtPsypk13srN78NCveuiaW+m4y6YuhJGMs+0J43R4K
      6lo59fYp9jU3Yv4RrctagkhcRVVVQED6Nmt7kAW/g65Tb7F3Zw0GvfWT1bzk8QgU1LTRXqbx
      +Ud/4pveBfYdPYTTKCCaXBQX2Fd3k0wUFTi/PaqouAxZNLFz/x6W7n3Dx59fIqIa2XvoAOO3
      vuajz86wGNn8YCKSvYSuziYeXfmSjz4/x2JUoWHvIUwLD/iHf/iY3nE/Bkkgv6BwtVMvGCny
      uACRlo6d9J3/jEt3RhCMFtyupx+FPOprJM5++mf65hXqKr0IgoynxMsrhB3VWWf0eYAsRlEU
      Jr/+WwpXrr7wd6msHfPRf7vBVr1Z8wC6ALIYPSxKZuhhUXR0MkQXQJajzN4l2fP/oMX8m23K
      G0lOL4kkEeTeoyESKQUQ8VTUUV2ctw6uEK+OMn6VxMRHSNVHkCx6xOnXzUtqAI3Q4ihn/vwR
      //2Pf+SrS71Ekz9nPj/B3ctXWElCemWMnsFFNrUDEppmcFnB4/Hg8RRgt6zNlVZJzXHlwiN0
      z4atz0tqgCSPb9ylbP87vFVgZGlpGUnQSESjSGYrsgixaASTxUoyGiWpJEmmwJmXh1HSiEdi
      JNNJkumn21TCfj8pFSRnMdtsMgKQikcIReJIJitOuwUtnSQYDKEg4XA6Ma6jU52joISamu8W
      jahxH1cuX2UukMBbu4vOtlr84w+4cvsxgq2Y/XtbGOn5mis9fqYWRul8u4tKl3Xd7NNZX14i
      ABmnS6Tv/iMqDrZQUFiIICS5eeYspV3vU26FK+c/Z99b73Pvyz8TLPBiiPlQnTs4cbCKG59/
      SqTQixT1g7uZEwe+e9FS03c4s1jNb1ot3LjaQwIIB8LsPvkrUiPXeTgTw2I0ULatjW3l+et2
      A0Zun+fDQTMIMk0dR9leJNPYfoR9Vom7588zE69h6NEIB956H4eQQJHM7D12hJXIIu980JHj
      bcitz0uen0TjwfewD93lq48/RC6o49TR1hfuaXWUsrPrCG7g/JlPicTLsLrKaO06gktTOXvm
      c2KJ0ueO840PML7sJ99hQ1QD9D6YpF5OYDA7aWrdSekzE2zrQe2e47zd9p0wg9MPuX6jn7Sm
      EVycwBIWaGmq4saV85hMDrbvbseiv/VvDC95lBoIEmUNe/hd3S7unD/DhO9lacs1REFC+EFX
      UhSkF2ZOSaXSFNW2sL+xBACDyYJBLMXrW2Sk7zoDjlpO7KnP4JJ+HtMTczQeOEGtC65/9cfV
      W+Ao5q2TO1kavsfo5AzebSZSqSiqoqKKAmKWrYzSWTsv9QZ9dOM2UZMTuwlmY7DXYke1wfCj
      PpY1PxM+hX1AMu5n6PEjZP8sKUcdVpNIMra6TfTNornqMb/AMaagvJLYuV4GjWmMJLB56pED
      Q6ykTRgsVqT1zL9isOIbuMqHgwIgUdV6gJ311Vy4cpZBSz75rmJsRohOj3L50mUkWyEdB3Yg
      yRJVhb188tFp9p86RoXTsn426qwrL5kJ1ogFV5icmiWhingraih0WkhGlhkZn0G2F+IwqRQU
      5tPz2dcIddU4DHbq6qowSQmufXwGqb4Gu8FBfX0VRlFhZX4Jm8eLIeljIWGhOM9ExDfP+PQi
      gslJTU0lxFaYmJwlLduoqq7EZsxwGdUbgqIoTH71v+CZP4/1t/8RMW/zPWjhzZoJfk2uEHF6
      z/ZQdfIQ7me23Tl7m5qTB9FHr18N3RUiM3RfoDcMXQCZsT6L4nU2FXXxMSlf9+o/ZheG+pOb
      a9AbRk4LIB1dpvtqN7P+CJLJScfhLircawlvrhH1LaFY83GYJNKRFW4Pz7Ovdfvrt3H4PPEn
      USFET4MugNdMTgtg5lEvSkkrvz1RSjISICkKoKmEfMuEEgqOvHwcZgPRcBiDzYZB1IgEYhgt
      AvcunyNevZftJW5cRoVIJIx/aZ6YIlFQkL+us9c6r4+cfkquAjezA32Mz/sRzQ6cNiOB6Yec
      v3KLwYGHnD97BX9ao/fqZRajKSBGz+mr+BIhZpd8zE+NMzWzSFqD5fFH3Okb4MGNC9waXtzs
      S9NZIzldA7iq9/CedYxbty/THVQ49NZ7TPZPse/YcYqdZmb7ztE3GnjOO1R0eGmpryTaeIBW
      r4V0aJGCmhaO798NS485PfVqwWx1Np6cFoCmadgLq+l6p4rQ3D0u9Q7jemZQTBRENE3LKvdo
      nddLTgtgbuQugzNxXE4LgYUJSuoOU0WC69e7KfFYmJtJsfctF8tLEo/v32NGDDO84GcH4PI4
      eXDvDsaacioK9ZngrUpOC6CosglVniEcT5PfcpgyrxsRJ/vNUyyHU+w72oLHLOJuP4Bxcg7R
      UsYvK1twImBo3EuHeYKUbMRgddG27cn4s6uCjkwDgOpsGjktAMlgoayq7odb8ZRW4Xlmi2x2
      UtvwA69UyUR5TcO3/xpdTxbTGGzkryW/6loxWBAsq/Prgsn1Gk+sA/pMcFajzwRnhh4VQkcn
      Q3K6CbQVUH2jpGKPNqw80epBKm3bsPI2m5wWwMCdG9hrWyh1WfANXOPMtJXfd7UipP1035hi
      16EWXlahqqk4gbiC22FbFxvT/V9+6wqxEUg1R7F+8LcbVt5mk9NNILsYZ3I5AlqKqakgpEKk
      NEisLLAiyZg0jVQiit/vJxpPoWmgppMEA34CwTCKqhCcGeTrq3fw+wMk0psf71QnM3K6BvBW
      eLnTt4RSKrJoKqTduMxEVMO6HKSooJx03M/1i1eJixLhhMyR44fw3bvMgxUFi6jStPcwwcFh
      Zsb83JSTbN9zmHJ3ZlkKdTaXnBaA5C7HEbzG7IoVu8NOtRe+GfHhiQYoqNtJYOIGI34oK5BR
      V2YZmF3GEU1gKyhn944mPA4zybYWJkxBTh3ZvdmXo/MK5LQAEKzk5WtMTk5gL2pGKvRieHCf
      gKpR6bSQmEvjrdtBe10etAtY7A7kiny8S4sMXvuSoZqj7Fm/iC06G0BO9wFAwO3KY2Joinyv
      E0QXxvQgy5TiMAo4y2qJjPUxv7TMzNgEvliQ8YEhliJJXHl2UmkF2WRF883yaHgEf1RPML7V
      yO0aAPBW1dNhKqbIuvotaGw5SrmpGFkAyV3NW0dlRqeXMDmLyLc6cZYXMToxi+ZqYH+DB0mE
      I3u3M74QQtGnFLccOS8Ao81NXd13S/nzS+t42qoRBBFXUSVtRd9FYzC5i2l2F3/vHO6SGtwl
      62SgIIKwgb5FG1lWFvCcK0QwGCQSWWO+XJ11RdM0NE3TXSHWyGuJCqEoypPEbzqbjaqqjIyM
      YLfbN9uU76EoCqIoImRZRDxFUZCkzGqw55pAkiRlfBKd9UFRFGyJJIXqy8JRvhqi3Yaxqirj
      496kGuAn+wCJwAKXLl1gJZwkmhSwWWy0HTtJQ9FPf5Hi8/2MquVsL8nUPUBj5v4tUlVtVDlf
      p0/xj5fnmx2h5/YDAkmJHXsPsa3c/fIVYJpGLBrFYLGuZo98KXHu3+ijZk879gx7XeGLF+Hq
      tcwOWiPmlhaK/qd/vy7n3ir85OMwuYp461e/J7n0gNMPTLzX1YAIaKpKOp0GQUSWJQRAVRXS
      ioooySgxPyupIlIpAyAiyzJoCqq2uh+ChCxJCGgoShpFBUmWkESILM+TKNFA01BUBeXJOSVx
      Ndzu6v4agiAiGyRURUUUV8+lqiqC+OIgvC9CDc9y4foAHV2nKLEJBKLp1XK/tUlGEkBRVdDU
      b7cJaorr587TePQ4RTYzsiSgaoCqoAkSoqChpBU0QVj9UgoKy3MLlOkty6wj81EgNcHjW9cZ
      nPOTiCVpPf5LasxBzp2/TFyTcJY3s68Ahnov4XusEQ4l6Pzl7yhYvsEfe1bwmBTC0RSH3vuA
      /OgwX168hygLyI5KTp7o+LaYRHCOb85fIYJISrHzzq/fQvaNcP5yL2lRIjAR4dT/+FeMnT1D
      XecpvJYUF768QvsvT7HWgOpzw/14drRT7l5NcJFvhOjiCJduPiQeTyC6a3inq42rn/9XQoKT
      dCyKVNrMkbIUDwb6mU0kqajdRUuFgfsPhwkuLlHafpL8yEPuDC6hkaaovpODzXpwyGwlYwEk
      fTM8nPbjLSqE9CL3rj1GqYpS2nKMlhoPqqoSn1yhpqWTQ40egkNXGPAlKABqWw9yuMHNyuBl
      xnwxxvtHOfTu+3htRoZvn+HxVJin6aYnRoYobjlGa62H4OAFrj9eoTQ8wvZD71JXZKD7w68A
      A7XlBYzPLuHyaqjOfBwZ9MsiYRVn4fd9dx71PUAwuvC48pgb6WXc34bB5eVw+zHypACnuydw
      V+2ibfssjcdP4rUYCS0OMzMX5d0PfovDKBHz11EVkwmHI0xODKI17830NutsEBn3YlLJBILF
      RXV1FTX1HRw/1oSmKJiMRgRB+LYDLctGJFH4XkfJYDAiPt2mQVzVsMgSgihiNptJp76bSU2l
      UxienNNqs5KMJ9EAq8WMIPBtM8dbU0NsepK56THclQ0ZRXAoKLQwN+Nbbb48IRpL462ooLq6
      hs633qPCDoIoYZBFBFF4Lu/BKjJVDXU4TTKCEKO3+y6G/BIqqyqQ1Tj6mrvsJWMBWPILsSUC
      rEQVtHQcnz9CcVEho/0PmJiaZHhynjVlvhNEtpXYuHn3MRNjAzwaj1FR4vj252Kvl4n+B0xM
      jnP19jRNdR5cdgv9fX1MTowzNu9bvQBLIeUuH9cexGioyCybjLt6J/LcPW4/GmZqYpSRqSWq
      SwuYnltBRSPiWyH+wna7gMOUZmxshsWVEBrCM0OCKZJJEaNBIrIySzCekUk6G4z0hz/84Q8v
      3UuUsdocuBxmRNlKeWk+85NjLEc0qmoqcRcUkW9MMjYxhzXfS4HbicXmwG6SEGUjFqsdu9WC
      2fp0mwmLzUFJRQViaJbppRgNbR2UukzIJgt2l4v8fA9OKcbY9ALF2ztoKLLhdHtIhxaY90VQ
      wilKd23DAWjJOBHZybaKwowuXpDMlJcXE5idZCEQp6i0jNKqaszxZabmljG6SyktsGM2mXA4
      nEiiiMlswemw4in2sDQ5TlywUujJw2qxYbOaATN5LoHJiVnMhbU0VRWS58rDbLHiynORScRE
      TdNYvnkT4+RURte1VmSvF9vRIxkfl63zAOl0enXAJQO21KL4xdF7dN8bRdFU0tYyPnh7H8sj
      d7l6b5KOrlOU560lsO3WQVEU+v+3v8WeZcOgb9I8wJYSgKYqpFIpVE1ANhiQJRElnUJRBQwG
      ec3Dn1sFRVGYm5qipKhofQoQRURT5h+NN0kAW8oZThAljD8IOiXJBt7oeWtZRrTokefWiy0l
      gFxEDQRIpjNfZyB7PIi29Vmo/yaR2wIIzfDx19dIplWeZonc21T60qFUTVNIJTUMJnndA+eG
      vj6L9gp9AM+//ldYD+xfB4veLHJbAIkAlpr9/OaZRNlrQUlNceYLPVP8m4D+/H5AKjDN1xe6
      CSdSGGwVvP2LTiZvfU3v2AqyKY+O/e3M3L9E32M/4Q8X6Hy7i0qXdbPN1nlFcl4AI7fP8+Gg
      GQSZpo6jNJe52bZtG4FInOn+h8yGD7AciNDQ3EFNeTF2m5myY0dYieg1wJtAzoRwEuMAAArS
      SURBVD+/2j3HefuZJtDso27GfDKlHgdWc4pYQqBtbyfj07PcuTaEd0cHTd5NNFjntZJdA7mb
      QDIeIRAIEAgEiCZShIIRXIXFuO0GwqEoaDC/sERBcRVVxXkEgiEEwUwyvohvJUAirWz2Jej8
      DHJbANYi8uJTdHd30919k5FZP3W79qDMDdI/FaSl8zjFdsizG3nY28Nc2sGuhkpEuZB9e7zc
      vfMAf1wPhbKVye0mkLWAw13P593de6TrB/s10FXa8L1NZY17KGtcR9t0NoQt5QqRayiKwuzo
      KMV5mS+oER2OV3JzWAu6K4TOhiFYLMgez8t31HkldAFkOVo0Rnpp6XvbRKsV0arPPbwOcloA
      mpZm5O517g7PY3GXc/DwXlzGtVTr2rervARBQEmEGZnz01CV2YzyWgh+8QXqD1whXH/1l7h+
      +8FrLysXya5G3AYzd/8Kgykv73/wAQd2FBEIRNd87PDlL7i/sLrcS0vGmJpbXC8zddaRnK4B
      RFkitRIkHFdwF9fgBhL+Kc5f6CaYVHF6G+g6vIv7F85Rue8wXlua65/eou5QBed7HpAeCTBd
      UUfnnhpC8yOc/vM4y8EEzUfeoaVCjwSxFchpARQ1tLMt1cs3X36CuaCCg/s7GL33kJp9J2ko
      sjF442seTtWTSiafRH7WSMYTCPk1HG9vJtp4nFavhXRoEZPdw6FDhzCuPOLcXEgXwBYhpwWA
      bKa+tZO6nQnG+65wvXcCUzJNud2CKBnweJzMh2NruklGmxObSQaD4Y1bmfYmk9N9gIWJfkam
      FkkpGqqSRjLIVLnN9A1PEw2v0Ne/QGmJC6OgEo7GWJ6eYHI5CIDRJOBbCZJMJtEDvm1dcroG
      yPcUMX7rFg9ux/FU76RrdwUyxSRvXeXrb/ppbOui3m0gsa+NS1cvMZVfzK69LVgQKGg7zPSl
      S1xaKWP/7nqqSp94yFkKqPHqifK2CvpMcBbzY1EhNnsY9E2aCdYFkMUoisJMfz/eH6ztlfLy
      kFyuTbLqzRJATjeBtgKiy4UxyzLEvEnoAsh20mnUWGyzrfgeajKJZjCgrnW46xXjD20EOS2A
      6dEh7MVVuCwGovOD9C4a6dxZhaBFGe5foHx7NZv92AIff4KyTpHhNgrzrl0U/ft/t9lmvJDs
      asRtMKmlSUaWwoDC1OMB+ienUNFI+2d5tBhiLTlqEsujfHH17nqbqrNO5HQNUFJewONJH2qx
      yKxQSLslzFxSw7gcwFNYiJaKcP/mNQZmfNiK6jh8oIXQyB0u3x9HNNo40HWIicvXuDfqIzI7
      wu5j71Hn2ew6QycTcloApqIyDHce4QuYkR12Glwpbk3GKPCH8JTXE54bYCKez/4DjYzc62V4
      rgRldIHGA13U5RkQjQ48h/azlB/k/SO7N/tydF6BnG4CIblx28NMzM5htxZgqaglPTlMMBLD
      6bITWZplJeRnYmIKOa8Yj8NFQ0czsYkBrly8zJRfD/6/1cltASDiynMxNTiMw+sBQwlm5R4L
      0SJcFhF7URkyRvYe6KS5tgKTKU0oaqB13wEOtxQyOL6MKEokw2ESqoqi6FMqW40cFwAUl5bi
      9NRQ4lqNMV1cWEF5UxVGARwlOznSaOSTv/8T14fmMEkWjAQ499lHnOtXObKrFNldRnuZxGcf
      /5nJQGqTr0YnU/SZ4CxmvRNkbBQbNQz6WlwhkskkqZT+JcsGVFXFNzJCkWEjkoavnXQqjSRL
      a06RJNrtGCsr19mq1+QKkUqliMf1zl02oKoqkseDOctcIVKpFJIkZZ0v0KvkLHtOADabDZue
      WCErUBSFubm5zTZjy/AqAsguCevobDA5PRGm82pkmop0ozC8Ql8pO69EJ6vJtvzAT9GbQDo6
      GaLXAFuEZ0erBUEATUN78vdzv61j2U/LeLrtiSnrVvZP2iMIq0kKn9yL7+z7vk3f2fq8fboA
      tgKpEJdPn2E6kkKQ83nnV6fICz7mzJSDt9vK8E/d5eIg/Pr4rnUpfvjO11y5u4DNYYK8av7R
      Wx309VzEXd9JiS3N5S+/oPLYb6h2rvfrpJEKL3L1wlmGwmX8zV8dxYSGb/wOX10bAkGjsvUg
      B3cUc+vcNRq6DuPSolw9e56iPSdpKHw+37IugC3A4shDtMp2fr+zAt/IdW73zXK8YvW3ZGiB
      m3cXOXzqBOsVkCiahGO//guqC344yaQy/agHpbyDqnV/+QFNY37ex7a2Nvx3Qqub0kluPZrl
      nQ9+i1MKc/lMD8sNxd8eMvrgJpS0UOd5cbJxXQBbAF8gRXFlHpIo4iipQBtfRKswEFic4sbi
      Et6WgxSYpHUrPxVa5uqZT+kxGqnc2UFHUxlqIsJI3x0CcZGTxyrXPV8yAIJIeV0TRKcQxVUB
      qKqKYDBiN8lIYh5FeTH8YSAdZfRBN1OLVo53VSD+iIG6ALYI333cBQRhtU2bSkQJpxO4Dev7
      GNtP/TXtaCQjy3zx9xfxNf0OTVUIR0MokvNHX66NQnjaFwBEUVjtD2gK4WCQtFD4k/bpo0Bb
      AJdNZMEXQdM04suzKI4CBMBT3sjxEwcZv3GJpfh3IdtfL2mSSQVNA4PFTp5RIglIFiet+4/S
      5olx8fbYOpX9ckRRJJVMkVBUNCXC4ooRlw0wOGg5+BYtbh837o8/15F/il4DbAG8jTt5+OVZ
      PhkykIzLnHx/L0LoEQAmZwlHD9Tx1flr/OYXncivvTGS4M75b1hIg5BOkPLWUgyspuwQqWzu
      ZPGb0zyYLaS51L6uTSFNVXjcc4GxuUWGhoMIxihtu/extyGfzz75DJOQwl3fTqERxgAQqN99
      kMA3F7g/mUdrpfu5c+ru0FnMU1+gsrIylFSCWCKFbDRjNsqgpkmqAkZZQtNUEokUJpNxXYYi
      1XSKWDyBhojZYkaWRNKpJIJkQBJXf09pEkaDtL4C0DQSsQgp5bthULPZikGCWCyKoklYLGYk
      EVLJFJLBgCgIKOkkyhP7fogugCzmWQHorA96H0Anp9EFoJPT6ALQyWl0AejkNLoAdHIaXQA6
      OY0uAJ2cRheATlaiRBf56D//Hf/H//n/cvneKOkXzFYpsQDnPj2N/2eUowtAJ+tQEwH+7n/+
      D5ja3+ef/P5dLNFFwi8IVaUkQlz44hyBn1GW7gukk3VoikIwlEA2CFhchbQfKAIlwd1zn3P+
      3hjRSJyOX/4NXdXfOV5M9J7lk2/uk1Rh++H3ebfFzv/1H/9v/IIFb2Uzv/7NSV60ZEGvAXSy
      Dsni4p/8i7+m57/87/yv/+n/4/bADGlBprSpjXfffY/D25ycv9BD8tsjIvzpw8+obT/K0T3V
      nP7sC+Irg9xZdPDBP/4b3j3SglFfD6CzVdAQKd1xhH+3vZOJB+f42//0d1j+zf9Azx//M6my
      XbjCCZR0+pkE5ctMjAQpnJ8Cq5H3Th1FLK7lLzun+ey//B2iezv/9J++j1l6XgV6DaCTdaTj
      YS6cP0soKeIp9mISNVLxCH0zMd7/9bvUFJrR1Gd7xV5qK0Xk4m2cOnWCWo+N6MIs7t2n+Jf/
      8p/B+HWG5hIvLEv3Bs1ictUbVFNSjPRe4KtrfSiyi0On3mN3jZuB61/y5a0ZOva24E/aOLm3
      inN/vsiBv/w11pUxPv7oC+ZiEs0HTtC1w82XH3/M4HyI6pZjvNe1C+MLlobpAshiclUAG4ne
      BNLJaXQB6OQ0ugB0cpr/H3MUTH49XxgwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='187' name='Shippment mode trends' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
